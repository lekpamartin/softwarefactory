filter {

	if ([fields][app] == "docker") {

		if ([docker][container][labels][log_type] == "alertmanager"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{ALERTMANAGER}" }
			}
		}


		else if ([docker][container][labels][log_type] == "apache"){
			grok {
				match => { "log" => "%{COMMONAPACHELOG}" }
				match => { "log" => "%{COMBINEDAPACHELOG}" }
			}
		}

		else if ([docker][container][labels][log_type] == "cadvisor"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{CADVISOR}" }
			}
		}

		else if ([docker][container][labels][log_type] == "grafana"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{ALERTMANAGER}" }
			}
		}


		else if ([docker][container][labels][log_type] == "haproxy"){
			grok {
				match => { "log" => "%{HAPROXYHTTP}" }
				match => { "log" => "%{HAPROXYTCP}" }
			}
		}


		else if ([docker][container][labels][log_type] == "javastacktrace"){
			grok {
				match => { "log" => "%{JAVASTACKTRACEPART}" }
			}
		}



		else if ([docker][container][labels][log_type] == "jenkins"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{JENKINS}" }
			}
		}

		else if ([docker][container][labels][log_type] == "nginx"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{NGINXACCESS}" }
			}
		}

		 else if ([docker][container][labels][log_type] == "nodeexporter"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{NODEEXPORTER}" }
			}
		}



		else if ([docker][container][labels][log_type] == "postgresql"){
			grok {
				match => { "log" => "%{POSTGRESQL}" }
			}
		}

		else if ([docker][container][labels][log_type] == "prometheus"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{PROMETHEUS}" }
			}
		}

		else if ([docker][container][labels][log_type] == "pushgateway"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{PUSHGATEWAY}" }
			}
		}


		else if ([docker][container][labels][log_type] == "redis"){
			grok {
				match => { "log" => "%{REDISLOG}" }
			}
		}


		else if ([docker][container][labels][log_type] == "zabbixserver"){
			grok {
				patterns_dir => ["/etc/logstash/conf.d/patterns"]
				match => { "log" => "%{ZABBIXSERVER}" }
			}
		}

		else {
			drop {}
		}



		if [loglevel] == "debug" {
			drop { }
		}

		date {
			match  => ["time", "ISO8601"]
			target => "@timestamp"
		}

		mutate {
			remove_tag => [ "beats_input_raw_event" ]
			remove_field => [ "log", "time", "timestamp","beat", "source", "[host][architecture]", "[host][containerized]", "[host][id]", "[host][os]", "[docker][container][id]", "[docker][container][labels][com][docker][compose][config-hash]", "docker.container.labels.com.docker.compose.container-number", "[docker][container][labels][maintainer]" ]
		}

	}

}
